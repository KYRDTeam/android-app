// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.util.di.module;

import com.kyberswap.android.data.api.home.HomeApi;
import com.kyberswap.android.data.repository.datasource.HeaderDataStore;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DataModule_ProvideRemoteDataSourceFactory implements Factory<HeaderDataStore> {
  private final Provider<HomeApi> homeApiProvider;

  public DataModule_ProvideRemoteDataSourceFactory(Provider<HomeApi> homeApiProvider) {
    this.homeApiProvider = homeApiProvider;
  }

  @Override
  public HeaderDataStore get() {
    return provideInstance(homeApiProvider);
  }

  public static HeaderDataStore provideInstance(Provider<HomeApi> homeApiProvider) {
    return proxyProvideRemoteDataSource(homeApiProvider.get());
  }

  public static DataModule_ProvideRemoteDataSourceFactory create(
      Provider<HomeApi> homeApiProvider) {
    return new DataModule_ProvideRemoteDataSourceFactory(homeApiProvider);
  }

  public static HeaderDataStore proxyProvideRemoteDataSource(HomeApi homeApi) {
    return Preconditions.checkNotNull(
        DataModule.provideRemoteDataSource(homeApi),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
