// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.data.repository.datasource.storage;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class StorageMediator_Factory implements Factory<StorageMediator> {
  private final Provider<HawkWrapper> hawkWrapperProvider;

  public StorageMediator_Factory(Provider<HawkWrapper> hawkWrapperProvider) {
    this.hawkWrapperProvider = hawkWrapperProvider;
  }

  @Override
  public StorageMediator get() {
    return provideInstance(hawkWrapperProvider);
  }

  public static StorageMediator provideInstance(Provider<HawkWrapper> hawkWrapperProvider) {
    return new StorageMediator(hawkWrapperProvider.get());
  }

  public static StorageMediator_Factory create(Provider<HawkWrapper> hawkWrapperProvider) {
    return new StorageMediator_Factory(hawkWrapperProvider);
  }

  public static StorageMediator newStorageMediator(HawkWrapper hawkWrapper) {
    return new StorageMediator(hawkWrapper);
  }
}
