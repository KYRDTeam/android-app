// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.util.di.module;

import com.kyberswap.android.data.api.home.HomeApi;
import com.kyberswap.android.data.mapper.ArticleMapper;
import com.kyberswap.android.domain.repository.TopArticleRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DataModule_ProvideTopArticleRepositoryFactory
    implements Factory<TopArticleRepository> {
  private final Provider<HomeApi> homeApiProvider;

  private final Provider<ArticleMapper> mapperProvider;

  public DataModule_ProvideTopArticleRepositoryFactory(
      Provider<HomeApi> homeApiProvider, Provider<ArticleMapper> mapperProvider) {
    this.homeApiProvider = homeApiProvider;
    this.mapperProvider = mapperProvider;
  }

  @Override
  public TopArticleRepository get() {
    return provideInstance(homeApiProvider, mapperProvider);
  }

  public static TopArticleRepository provideInstance(
      Provider<HomeApi> homeApiProvider, Provider<ArticleMapper> mapperProvider) {
    return proxyProvideTopArticleRepository(homeApiProvider.get(), mapperProvider.get());
  }

  public static DataModule_ProvideTopArticleRepositoryFactory create(
      Provider<HomeApi> homeApiProvider, Provider<ArticleMapper> mapperProvider) {
    return new DataModule_ProvideTopArticleRepositoryFactory(homeApiProvider, mapperProvider);
  }

  public static TopArticleRepository proxyProvideTopArticleRepository(
      HomeApi homeApi, ArticleMapper mapper) {
    return Preconditions.checkNotNull(
        DataModule.provideTopArticleRepository(homeApi, mapper),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
