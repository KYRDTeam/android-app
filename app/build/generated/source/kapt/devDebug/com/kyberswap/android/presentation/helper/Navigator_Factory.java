// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.presentation.helper;

import android.support.v7.app.AppCompatActivity;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class Navigator_Factory implements Factory<Navigator> {
  private final Provider<AppCompatActivity> activityProvider;

  public Navigator_Factory(Provider<AppCompatActivity> activityProvider) {
    this.activityProvider = activityProvider;
  }

  @Override
  public Navigator get() {
    return provideInstance(activityProvider);
  }

  public static Navigator provideInstance(Provider<AppCompatActivity> activityProvider) {
    return new Navigator(activityProvider.get());
  }

  public static Navigator_Factory create(Provider<AppCompatActivity> activityProvider) {
    return new Navigator_Factory(activityProvider);
  }

  public static Navigator newNavigator(AppCompatActivity activity) {
    return new Navigator(activity);
  }
}
