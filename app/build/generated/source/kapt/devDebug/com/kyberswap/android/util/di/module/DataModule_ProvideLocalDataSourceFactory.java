// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.util.di.module;

import com.kyberswap.android.data.repository.datasource.HeaderDataStore;
import com.kyberswap.android.data.repository.datasource.local.HeaderDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DataModule_ProvideLocalDataSourceFactory implements Factory<HeaderDataStore> {
  private final Provider<HeaderDao> headerDaoProvider;

  public DataModule_ProvideLocalDataSourceFactory(Provider<HeaderDao> headerDaoProvider) {
    this.headerDaoProvider = headerDaoProvider;
  }

  @Override
  public HeaderDataStore get() {
    return provideInstance(headerDaoProvider);
  }

  public static HeaderDataStore provideInstance(Provider<HeaderDao> headerDaoProvider) {
    return proxyProvideLocalDataSource(headerDaoProvider.get());
  }

  public static DataModule_ProvideLocalDataSourceFactory create(
      Provider<HeaderDao> headerDaoProvider) {
    return new DataModule_ProvideLocalDataSourceFactory(headerDaoProvider);
  }

  public static HeaderDataStore proxyProvideLocalDataSource(HeaderDao headerDao) {
    return Preconditions.checkNotNull(
        DataModule.provideLocalDataSource(headerDao),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
