// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.data.repository;

import com.kyberswap.android.data.api.home.HomeApi;
import com.kyberswap.android.data.mapper.ArticleMapper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class TopArticleDataRepository_Factory implements Factory<TopArticleDataRepository> {
  private final Provider<HomeApi> homeApiProvider;

  private final Provider<ArticleMapper> mapperProvider;

  public TopArticleDataRepository_Factory(
      Provider<HomeApi> homeApiProvider, Provider<ArticleMapper> mapperProvider) {
    this.homeApiProvider = homeApiProvider;
    this.mapperProvider = mapperProvider;
  }

  @Override
  public TopArticleDataRepository get() {
    return provideInstance(homeApiProvider, mapperProvider);
  }

  public static TopArticleDataRepository provideInstance(
      Provider<HomeApi> homeApiProvider, Provider<ArticleMapper> mapperProvider) {
    return new TopArticleDataRepository(homeApiProvider.get(), mapperProvider.get());
  }

  public static TopArticleDataRepository_Factory create(
      Provider<HomeApi> homeApiProvider, Provider<ArticleMapper> mapperProvider) {
    return new TopArticleDataRepository_Factory(homeApiProvider, mapperProvider);
  }

  public static TopArticleDataRepository newTopArticleDataRepository(
      HomeApi homeApi, ArticleMapper mapper) {
    return new TopArticleDataRepository(homeApi, mapper);
  }
}
