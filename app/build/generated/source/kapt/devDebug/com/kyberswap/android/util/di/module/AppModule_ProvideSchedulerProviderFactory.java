// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.util.di.module;

import com.kyberswap.android.domain.SchedulerProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideSchedulerProviderFactory implements Factory<SchedulerProvider> {
  private static final AppModule_ProvideSchedulerProviderFactory INSTANCE =
      new AppModule_ProvideSchedulerProviderFactory();

  @Override
  public SchedulerProvider get() {
    return provideInstance();
  }

  public static SchedulerProvider provideInstance() {
    return proxyProvideSchedulerProvider();
  }

  public static AppModule_ProvideSchedulerProviderFactory create() {
    return INSTANCE;
  }

  public static SchedulerProvider proxyProvideSchedulerProvider() {
    return Preconditions.checkNotNull(
        AppModule.provideSchedulerProvider(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
