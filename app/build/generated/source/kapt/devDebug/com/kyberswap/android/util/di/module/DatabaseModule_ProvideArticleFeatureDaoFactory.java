// Generated by Dagger (https://google.github.io/dagger).
package com.kyberswap.android.util.di.module;

import com.kyberswap.android.data.repository.datasource.local.AppDatabase;
import com.kyberswap.android.data.repository.datasource.local.HeaderDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DatabaseModule_ProvideArticleFeatureDaoFactory implements Factory<HeaderDao> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> dbProvider;

  public DatabaseModule_ProvideArticleFeatureDaoFactory(
      DatabaseModule module, Provider<AppDatabase> dbProvider) {
    this.module = module;
    this.dbProvider = dbProvider;
  }

  @Override
  public HeaderDao get() {
    return provideInstance(module, dbProvider);
  }

  public static HeaderDao provideInstance(DatabaseModule module, Provider<AppDatabase> dbProvider) {
    return proxyProvideArticleFeatureDao(module, dbProvider.get());
  }

  public static DatabaseModule_ProvideArticleFeatureDaoFactory create(
      DatabaseModule module, Provider<AppDatabase> dbProvider) {
    return new DatabaseModule_ProvideArticleFeatureDaoFactory(module, dbProvider);
  }

  public static HeaderDao proxyProvideArticleFeatureDao(DatabaseModule instance, AppDatabase db) {
    return Preconditions.checkNotNull(
        instance.provideArticleFeatureDao(db),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
